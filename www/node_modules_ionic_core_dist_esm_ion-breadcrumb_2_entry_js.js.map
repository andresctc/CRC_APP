{"version":3,"file":"node_modules_ionic_core_dist_esm_ion-breadcrumb_2_entry_js.js","mappings":"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IAAI,qDAAgB;AACpB,6BAA6B,qDAAW;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,oDAAoD;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,cAAc,oDAAoD;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D,gBAAgB,sBAAsB;AACpG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,mBAAmB;AAC/B,iBAAiB,4DAAU;AAC3B,YAAY,qDAAC,CAAC,iDAAI,IAAI,OAAO,qDAAkB;AAC/C;AACA,sBAAsB,qDAAW;AACjC,4BAA4B,qDAAW;AACvC;AACA,OAAO,GAAG,EAAE,qDAAC;AACb;AACA,aAAa,OAAO,qDAAU;AAC9B,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACwE","sources":["./node_modules/@ionic/core/dist/esm/ion-breadcrumb_2.entry.js"],"sourcesContent":["/*!\r\n * (C) Ionic http://ionicframework.com - MIT License\r\n */\r\nimport { r as registerInstance, e as createEvent, h, H as Host, i as getElement } from './index-b3eecb14.js';\r\nimport { j as chevronForwardOutline, k as ellipsisHorizontal } from './index-e3f61316.js';\r\nimport { b as getIonMode } from './ionic-global-f1ce4d2d.js';\r\nimport { i as inheritAttributes } from './helpers-1ec1a6dd.js';\r\nimport { o as openURL, c as createColorClasses, h as hostContext } from './theme-7670341c.js';\r\n\r\nconst breadcrumbIosCss = \":host{display:-ms-flexbox;display:flex;-ms-flex:0 0 auto;flex:0 0 auto;-ms-flex-align:center;align-items:center;color:var(--color);font-size:16px;font-weight:400;line-height:1.5}.breadcrumb-native{font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;width:100%;outline:none;background:inherit}:host(.breadcrumb-disabled){cursor:default;opacity:0.5;pointer-events:none}:host(.breadcrumb-active){color:var(--color-active)}:host(.ion-focused){color:var(--color-focused)}:host(.ion-focused) .breadcrumb-native{background:var(--background-focused)}@media (any-hover: hover){:host(.ion-activatable:hover){color:var(--color-hover)}:host(.ion-activatable.in-breadcrumbs-color:hover),:host(.ion-activatable.ion-color:hover){color:var(--ion-color-shade)}}.breadcrumb-separator{display:-ms-inline-flexbox;display:inline-flex}:host(.breadcrumb-collapsed) .breadcrumb-native{display:none}:host(.in-breadcrumbs-color),:host(.in-breadcrumbs-color.breadcrumb-active){color:var(--ion-color-base)}:host(.in-breadcrumbs-color) .breadcrumb-separator{color:var(--ion-color-base)}:host(.ion-color){color:var(--ion-color-base)}:host(.in-toolbar-color),:host(.in-toolbar-color) .breadcrumb-separator{color:rgba(var(--ion-color-contrast-rgb), 0.8)}:host(.in-toolbar-color.breadcrumb-active){color:var(--ion-color-contrast)}.breadcrumbs-collapsed-indicator{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;margin-left:14px;margin-right:14px;margin-top:0;margin-bottom:0;display:-ms-flexbox;display:flex;-ms-flex:1 1 100%;flex:1 1 100%;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:32px;height:18px;border:0;outline:none;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.breadcrumbs-collapsed-indicator{margin-left:unset;margin-right:unset;-webkit-margin-start:14px;margin-inline-start:14px;-webkit-margin-end:14px;margin-inline-end:14px}}.breadcrumbs-collapsed-indicator ion-icon{margin-top:1px;font-size:22px}:host{--color:var(--ion-color-step-850, #2d4665);--color-active:var(--ion-text-color, #03060b);--color-hover:var(--ion-text-color, #03060b);--color-focused:var(--color-active);--background-focused:var(--ion-color-step-50, rgba(233, 237, 243, 0.7))}:host(.breadcrumb-active){font-weight:600}.breadcrumb-native{border-radius:4px;padding-left:12px;padding-right:12px;padding-top:5px;padding-bottom:5px;border:1px solid transparent}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.breadcrumb-native{padding-left:unset;padding-right:unset;-webkit-padding-start:12px;padding-inline-start:12px;-webkit-padding-end:12px;padding-inline-end:12px}}:host(.ion-focused) .breadcrumb-native{border-radius:8px}:host(.in-breadcrumbs-color.ion-focused) .breadcrumb-native,:host(.ion-color.ion-focused) .breadcrumb-native{background:rgba(var(--ion-color-base-rgb), 0.1);color:var(--ion-color-base)}:host(.ion-focused) ::slotted(ion-icon),:host(.in-breadcrumbs-color.ion-focused) ::slotted(ion-icon),:host(.ion-color.ion-focused) ::slotted(ion-icon){color:var(--ion-color-step-750, #445b78)}.breadcrumb-separator{color:var(--ion-color-step-550, #73849a)}::slotted(ion-icon){color:var(--ion-color-step-400, #92a0b3);font-size:18px}::slotted(ion-icon[slot=start]){margin-right:8px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){::slotted(ion-icon[slot=start]){margin-right:unset;-webkit-margin-end:8px;margin-inline-end:8px}}::slotted(ion-icon[slot=end]){margin-left:8px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){::slotted(ion-icon[slot=end]){margin-left:unset;-webkit-margin-start:8px;margin-inline-start:8px}}:host(.breadcrumb-active) ::slotted(ion-icon){color:var(--ion-color-step-850, #242d39)}.breadcrumbs-collapsed-indicator{border-radius:4px;background:var(--ion-color-step-100, #e9edf3);color:var(--ion-color-step-550, #73849a)}.breadcrumbs-collapsed-indicator:hover{opacity:0.45}.breadcrumbs-collapsed-indicator:focus{background:var(--ion-color-step-150, #d9e0ea)}\";\r\n\r\nconst breadcrumbMdCss = \":host{display:-ms-flexbox;display:flex;-ms-flex:0 0 auto;flex:0 0 auto;-ms-flex-align:center;align-items:center;color:var(--color);font-size:16px;font-weight:400;line-height:1.5}.breadcrumb-native{font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;width:100%;outline:none;background:inherit}:host(.breadcrumb-disabled){cursor:default;opacity:0.5;pointer-events:none}:host(.breadcrumb-active){color:var(--color-active)}:host(.ion-focused){color:var(--color-focused)}:host(.ion-focused) .breadcrumb-native{background:var(--background-focused)}@media (any-hover: hover){:host(.ion-activatable:hover){color:var(--color-hover)}:host(.ion-activatable.in-breadcrumbs-color:hover),:host(.ion-activatable.ion-color:hover){color:var(--ion-color-shade)}}.breadcrumb-separator{display:-ms-inline-flexbox;display:inline-flex}:host(.breadcrumb-collapsed) .breadcrumb-native{display:none}:host(.in-breadcrumbs-color),:host(.in-breadcrumbs-color.breadcrumb-active){color:var(--ion-color-base)}:host(.in-breadcrumbs-color) .breadcrumb-separator{color:var(--ion-color-base)}:host(.ion-color){color:var(--ion-color-base)}:host(.in-toolbar-color),:host(.in-toolbar-color) .breadcrumb-separator{color:rgba(var(--ion-color-contrast-rgb), 0.8)}:host(.in-toolbar-color.breadcrumb-active){color:var(--ion-color-contrast)}.breadcrumbs-collapsed-indicator{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;margin-left:14px;margin-right:14px;margin-top:0;margin-bottom:0;display:-ms-flexbox;display:flex;-ms-flex:1 1 100%;flex:1 1 100%;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:32px;height:18px;border:0;outline:none;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.breadcrumbs-collapsed-indicator{margin-left:unset;margin-right:unset;-webkit-margin-start:14px;margin-inline-start:14px;-webkit-margin-end:14px;margin-inline-end:14px}}.breadcrumbs-collapsed-indicator ion-icon{margin-top:1px;font-size:22px}:host{--color:var(--ion-color-step-600, #677483);--color-active:var(--ion-text-color, #03060b);--color-hover:var(--ion-text-color, #03060b);--color-focused:var(--ion-color-step-800, #35404e);--background-focused:$breadcrumb-md-background-focused}:host(.breadcrumb-active){font-weight:500}.breadcrumb-native{padding-left:12px;padding-right:12px;padding-top:6px;padding-bottom:6px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.breadcrumb-native{padding-left:unset;padding-right:unset;-webkit-padding-start:12px;padding-inline-start:12px;-webkit-padding-end:12px;padding-inline-end:12px}}.breadcrumb-separator{margin-left:10px;margin-right:10px;margin-top:-1px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.breadcrumb-separator{margin-left:unset;margin-right:unset;-webkit-margin-start:10px;margin-inline-start:10px;-webkit-margin-end:10px;margin-inline-end:10px}}:host(.ion-focused) .breadcrumb-native{border-radius:4px;-webkit-box-shadow:0px 1px 2px rgba(0, 0, 0, 0.2), 0px 2px 8px rgba(0, 0, 0, 0.12);box-shadow:0px 1px 2px rgba(0, 0, 0, 0.2), 0px 2px 8px rgba(0, 0, 0, 0.12)}.breadcrumb-separator{color:var(--ion-color-step-550, #73849a)}::slotted(ion-icon){color:var(--ion-color-step-550, #7d8894);font-size:18px}::slotted(ion-icon[slot=start]){margin-right:8px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){::slotted(ion-icon[slot=start]){margin-right:unset;-webkit-margin-end:8px;margin-inline-end:8px}}::slotted(ion-icon[slot=end]){margin-left:8px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){::slotted(ion-icon[slot=end]){margin-left:unset;-webkit-margin-start:8px;margin-inline-start:8px}}:host(.breadcrumb-active) ::slotted(ion-icon){color:var(--ion-color-step-850, #222d3a)}.breadcrumbs-collapsed-indicator{border-radius:2px;background:var(--ion-color-step-100, #eef1f3);color:var(--ion-color-step-550, #73849a)}.breadcrumbs-collapsed-indicator:hover{opacity:0.7}.breadcrumbs-collapsed-indicator:focus{background:var(--ion-color-step-150, #dfe5e8)}\";\r\n\r\nconst Breadcrumb = class {\r\n  constructor(hostRef) {\r\n    registerInstance(this, hostRef);\r\n    this.ionFocus = createEvent(this, \"ionFocus\", 7);\r\n    this.ionBlur = createEvent(this, \"ionBlur\", 7);\r\n    this.collapsedClick = createEvent(this, \"collapsedClick\", 7);\r\n    this.inheritedAttributes = {};\r\n    /** @internal */\r\n    this.collapsed = false;\r\n    /**\r\n     * If `true`, the breadcrumb will take on a different look to show that\r\n     * it is the currently active breadcrumb. Defaults to `true` for the\r\n     * last breadcrumb if it is not set on any.\r\n     */\r\n    this.active = false;\r\n    /**\r\n     * If `true`, the user cannot interact with the breadcrumb.\r\n     */\r\n    this.disabled = false;\r\n    /**\r\n     * When using a router, it specifies the transition direction when navigating to\r\n     * another page using `href`.\r\n     */\r\n    this.routerDirection = 'forward';\r\n    this.onFocus = () => {\r\n      this.ionFocus.emit();\r\n    };\r\n    this.onBlur = () => {\r\n      this.ionBlur.emit();\r\n    };\r\n    this.collapsedIndicatorClick = () => {\r\n      this.collapsedClick.emit({ ionShadowTarget: this.collapsedRef });\r\n    };\r\n  }\r\n  componentWillLoad() {\r\n    this.inheritedAttributes = inheritAttributes(this.el, ['aria-label']);\r\n  }\r\n  isClickable() {\r\n    return this.href !== undefined;\r\n  }\r\n  render() {\r\n    const { color, active, collapsed, disabled, download, el, inheritedAttributes, last, routerAnimation, routerDirection, separator, showCollapsedIndicator, target, } = this;\r\n    const clickable = this.isClickable();\r\n    const TagType = this.href === undefined ? 'span' : 'a';\r\n    // Links can still be tabbed to when set to disabled if they have an href\r\n    // in order to truly disable them we can keep it as an anchor but remove the href\r\n    const href = disabled ? undefined : this.href;\r\n    const mode = getIonMode(this);\r\n    const attrs = TagType === 'span'\r\n      ? {}\r\n      : {\r\n        download,\r\n        href,\r\n        target,\r\n      };\r\n    // If the breadcrumb is collapsed, check if it contains the collapsed indicator\r\n    // to show the separator as long as it isn't also the last breadcrumb\r\n    // otherwise if not collapsed use the value in separator\r\n    const showSeparator = last ? false : collapsed ? (showCollapsedIndicator && !last ? true : false) : separator;\r\n    return (h(Host, { onClick: (ev) => openURL(href, ev, routerDirection, routerAnimation), \"aria-disabled\": disabled ? 'true' : null, class: createColorClasses(color, {\r\n        [mode]: true,\r\n        'breadcrumb-active': active,\r\n        'breadcrumb-collapsed': collapsed,\r\n        'breadcrumb-disabled': disabled,\r\n        'in-breadcrumbs-color': hostContext('ion-breadcrumbs[color]', el),\r\n        'in-toolbar': hostContext('ion-toolbar', this.el),\r\n        'in-toolbar-color': hostContext('ion-toolbar[color]', this.el),\r\n        'ion-activatable': clickable,\r\n        'ion-focusable': clickable,\r\n      }) }, h(TagType, Object.assign({}, attrs, { class: \"breadcrumb-native\", part: \"native\", disabled: disabled, onFocus: this.onFocus, onBlur: this.onBlur }, inheritedAttributes), h(\"slot\", { name: \"start\" }), h(\"slot\", null), h(\"slot\", { name: \"end\" })), showCollapsedIndicator && (h(\"button\", { part: \"collapsed-indicator\", onClick: () => this.collapsedIndicatorClick(), ref: (collapsedEl) => (this.collapsedRef = collapsedEl), class: {\r\n        'breadcrumbs-collapsed-indicator': true,\r\n      } }, h(\"ion-icon\", { icon: ellipsisHorizontal, lazy: false }))), showSeparator && (h(\"span\", { class: \"breadcrumb-separator\", part: \"separator\" }, h(\"slot\", { name: \"separator\" }, mode === 'ios' ? (h(\"ion-icon\", { icon: chevronForwardOutline, lazy: false, \"flip-rtl\": true })) : (h(\"span\", null, \"/\")))))));\r\n  }\r\n  get el() { return getElement(this); }\r\n};\r\nBreadcrumb.style = {\r\n  ios: breadcrumbIosCss,\r\n  md: breadcrumbMdCss\r\n};\r\n\r\nconst breadcrumbsIosCss = \":host{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;-ms-flex-align:center;align-items:center}:host(.in-toolbar-color),:host(.in-toolbar-color) .breadcrumbs-collapsed-indicator ion-icon{color:var(--ion-color-contrast)}:host(.in-toolbar-color) .breadcrumbs-collapsed-indicator{background:rgba(var(--ion-color-contrast-rgb), 0.11)}:host(.in-toolbar){padding-left:20px;padding-right:20px;padding-top:0;padding-bottom:0;-ms-flex-pack:center;justify-content:center}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.in-toolbar){padding-left:unset;padding-right:unset;-webkit-padding-start:20px;padding-inline-start:20px;-webkit-padding-end:20px;padding-inline-end:20px}}\";\r\n\r\nconst breadcrumbsMdCss = \":host{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;-ms-flex-align:center;align-items:center}:host(.in-toolbar-color),:host(.in-toolbar-color) .breadcrumbs-collapsed-indicator ion-icon{color:var(--ion-color-contrast)}:host(.in-toolbar-color) .breadcrumbs-collapsed-indicator{background:rgba(var(--ion-color-contrast-rgb), 0.11)}:host(.in-toolbar){padding-left:8px;padding-right:8px;padding-top:0;padding-bottom:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.in-toolbar){padding-left:unset;padding-right:unset;-webkit-padding-start:8px;padding-inline-start:8px;-webkit-padding-end:8px;padding-inline-end:8px}}\";\r\n\r\nconst Breadcrumbs = class {\r\n  constructor(hostRef) {\r\n    registerInstance(this, hostRef);\r\n    this.ionCollapsedClick = createEvent(this, \"ionCollapsedClick\", 7);\r\n    /**\r\n     * The number of breadcrumbs to show before the collapsed indicator.\r\n     * If this property exists `maxItems` will be ignored.\r\n     */\r\n    this.itemsBeforeCollapse = 1;\r\n    /**\r\n     * The number of breadcrumbs to show after the collapsed indicator.\r\n     * If this property exists `maxItems` will be ignored.\r\n     */\r\n    this.itemsAfterCollapse = 1;\r\n    this.breadcrumbsInit = () => {\r\n      this.setBreadcrumbSeparator();\r\n      this.setMaxItems();\r\n    };\r\n    this.resetActiveBreadcrumb = () => {\r\n      const breadcrumbs = this.getBreadcrumbs();\r\n      // Only reset the active breadcrumb if we were the ones to change it\r\n      // otherwise use the one set on the component\r\n      const activeBreadcrumb = breadcrumbs.find((breadcrumb) => breadcrumb.active);\r\n      if (activeBreadcrumb && this.activeChanged) {\r\n        activeBreadcrumb.active = false;\r\n      }\r\n    };\r\n    this.setMaxItems = () => {\r\n      const { itemsAfterCollapse, itemsBeforeCollapse, maxItems } = this;\r\n      const breadcrumbs = this.getBreadcrumbs();\r\n      for (const breadcrumb of breadcrumbs) {\r\n        breadcrumb.showCollapsedIndicator = false;\r\n        breadcrumb.collapsed = false;\r\n      }\r\n      // If the number of breadcrumbs exceeds the maximum number of items\r\n      // that should show and the items before / after collapse do not\r\n      // exceed the maximum items then we need to collapse the breadcrumbs\r\n      const shouldCollapse = maxItems !== undefined && breadcrumbs.length > maxItems && itemsBeforeCollapse + itemsAfterCollapse <= maxItems;\r\n      if (shouldCollapse) {\r\n        // Show the collapsed indicator in the first breadcrumb that collapses\r\n        breadcrumbs.forEach((breadcrumb, index) => {\r\n          if (index === itemsBeforeCollapse) {\r\n            breadcrumb.showCollapsedIndicator = true;\r\n          }\r\n          // Collapse all breadcrumbs that have an index greater than or equal to\r\n          // the number before collapse and an index less than the total number\r\n          // of breadcrumbs minus the items that should show after the collapse\r\n          if (index >= itemsBeforeCollapse && index < breadcrumbs.length - itemsAfterCollapse) {\r\n            breadcrumb.collapsed = true;\r\n          }\r\n        });\r\n      }\r\n    };\r\n    this.setBreadcrumbSeparator = () => {\r\n      const { itemsAfterCollapse, itemsBeforeCollapse, maxItems } = this;\r\n      const breadcrumbs = this.getBreadcrumbs();\r\n      // Check if an active breadcrumb exists already\r\n      const active = breadcrumbs.find((breadcrumb) => breadcrumb.active);\r\n      // Set the separator on all but the last breadcrumb\r\n      for (const breadcrumb of breadcrumbs) {\r\n        // The only time the last breadcrumb changes is when\r\n        // itemsAfterCollapse is set to 0, in this case the\r\n        // last breadcrumb will be the collapsed indicator\r\n        const last = maxItems !== undefined && itemsAfterCollapse === 0\r\n          ? breadcrumb === breadcrumbs[itemsBeforeCollapse]\r\n          : breadcrumb === breadcrumbs[breadcrumbs.length - 1];\r\n        breadcrumb.last = last;\r\n        // If the breadcrumb has defined whether or not to show the\r\n        // separator then use that value, otherwise check if it's the\r\n        // last breadcrumb\r\n        const separator = breadcrumb.separator !== undefined ? breadcrumb.separator : last ? undefined : true;\r\n        breadcrumb.separator = separator;\r\n        // If there is not an active breadcrumb already\r\n        // set the last one to active\r\n        if (!active && last) {\r\n          breadcrumb.active = true;\r\n          this.activeChanged = true;\r\n        }\r\n      }\r\n    };\r\n    this.getBreadcrumbs = () => {\r\n      return Array.from(this.el.querySelectorAll('ion-breadcrumb'));\r\n    };\r\n  }\r\n  onCollapsedClick(ev) {\r\n    const breadcrumbs = this.getBreadcrumbs();\r\n    const collapsedBreadcrumbs = breadcrumbs.filter((breadcrumb) => breadcrumb.collapsed);\r\n    this.ionCollapsedClick.emit(Object.assign(Object.assign({}, ev.detail), { collapsedBreadcrumbs }));\r\n  }\r\n  maxItemsChanged() {\r\n    this.resetActiveBreadcrumb();\r\n    this.breadcrumbsInit();\r\n  }\r\n  componentWillLoad() {\r\n    this.breadcrumbsInit();\r\n  }\r\n  render() {\r\n    const { color, collapsed } = this;\r\n    const mode = getIonMode(this);\r\n    return (h(Host, { class: createColorClasses(color, {\r\n        [mode]: true,\r\n        'in-toolbar': hostContext('ion-toolbar', this.el),\r\n        'in-toolbar-color': hostContext('ion-toolbar[color]', this.el),\r\n        'breadcrumbs-collapsed': collapsed,\r\n      }) }, h(\"slot\", null)));\r\n  }\r\n  get el() { return getElement(this); }\r\n  static get watchers() { return {\r\n    \"maxItems\": [\"maxItemsChanged\"],\r\n    \"itemsBeforeCollapse\": [\"maxItemsChanged\"],\r\n    \"itemsAfterCollapse\": [\"maxItemsChanged\"]\r\n  }; }\r\n};\r\nBreadcrumbs.style = {\r\n  ios: breadcrumbsIosCss,\r\n  md: breadcrumbsMdCss\r\n};\r\n\r\nexport { Breadcrumb as ion_breadcrumb, Breadcrumbs as ion_breadcrumbs };\r\n"],"names":[],"sourceRoot":"webpack:///"}