{"version":3,"file":"node_modules_ionic_core_dist_esm_ion-picker-column-internal_entry_js.js","mappings":"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","sources":["./node_modules/@ionic/core/dist/esm/ion-picker-column-internal.entry.js"],"sourcesContent":["/*!\r\n * (C) Ionic http://ionicframework.com - MIT License\r\n */\r\nimport { r as registerInstance, e as createEvent, h, H as Host, i as getElement } from './index-b3eecb14.js';\r\nimport { b as getIonMode } from './ionic-global-f1ce4d2d.js';\r\nimport { r as raf, g as getElementRoot } from './helpers-1ec1a6dd.js';\r\nimport { a as hapticSelectionStart, b as hapticSelectionChanged, h as hapticSelectionEnd } from './haptic-683b3b3c.js';\r\nimport { c as createColorClasses } from './theme-7670341c.js';\r\n\r\nconst pickerColumnInternalIosCss = \":host{padding-left:16px;padding-right:16px;padding-top:0px;padding-bottom:0px;height:200px;outline:none;font-size:22px;-webkit-scroll-snap-type:y mandatory;-ms-scroll-snap-type:y mandatory;scroll-snap-type:y mandatory;overflow-x:hidden;overflow-y:scroll;scrollbar-width:none;text-align:center}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host{padding-left:unset;padding-right:unset;-webkit-padding-start:16px;padding-inline-start:16px;-webkit-padding-end:16px;padding-inline-end:16px}}:host::-webkit-scrollbar{display:none}:host .picker-item{height:34px;line-height:34px;text-overflow:ellipsis;white-space:nowrap;overflow:hidden;scroll-snap-align:center}:host .picker-item-empty{scroll-snap-align:none}:host(.picker-column-active) .picker-item.picker-item-active{color:var(--ion-color-base)}@media (any-hover: hover){:host(:focus){outline:none;background:rgba(var(--ion-color-base-rgb), 0.2)}}\";\r\n\r\nconst pickerColumnInternalMdCss = \":host{padding-left:16px;padding-right:16px;padding-top:0px;padding-bottom:0px;height:200px;outline:none;font-size:22px;-webkit-scroll-snap-type:y mandatory;-ms-scroll-snap-type:y mandatory;scroll-snap-type:y mandatory;overflow-x:hidden;overflow-y:scroll;scrollbar-width:none;text-align:center}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host{padding-left:unset;padding-right:unset;-webkit-padding-start:16px;padding-inline-start:16px;-webkit-padding-end:16px;padding-inline-end:16px}}:host::-webkit-scrollbar{display:none}:host .picker-item{height:34px;line-height:34px;text-overflow:ellipsis;white-space:nowrap;overflow:hidden;scroll-snap-align:center}:host .picker-item-empty{scroll-snap-align:none}:host(.picker-column-active) .picker-item.picker-item-active{color:var(--ion-color-base)}@media (any-hover: hover){:host(:focus){outline:none;background:rgba(var(--ion-color-base-rgb), 0.2)}}:host .picker-item-active{color:var(--ion-color-base)}\";\r\n\r\nconst PickerColumnInternal = class {\r\n  constructor(hostRef) {\r\n    registerInstance(this, hostRef);\r\n    this.ionChange = createEvent(this, \"ionChange\", 7);\r\n    this.hapticsStarted = false;\r\n    this.isColumnVisible = false;\r\n    this.isActive = false;\r\n    /**\r\n     * A list of options to be displayed in the picker\r\n     */\r\n    this.items = [];\r\n    /**\r\n     * The color to use from your application's color palette.\r\n     * Default options are: `\"primary\"`, `\"secondary\"`, `\"tertiary\"`, `\"success\"`, `\"warning\"`, `\"danger\"`, `\"light\"`, `\"medium\"`, and `\"dark\"`.\r\n     * For more information on colors, see [theming](/docs/theming/basics).\r\n     */\r\n    this.color = 'primary';\r\n    /**\r\n     * If `true`, tapping the picker will\r\n     * reveal a number input keyboard that lets\r\n     * the user type in values for each picker\r\n     * column. This is useful when working\r\n     * with time pickers.\r\n     *\r\n     * @internal\r\n     */\r\n    this.numericInput = false;\r\n    this.centerPickerItemInView = (target, smooth = true) => {\r\n      const { el, isColumnVisible } = this;\r\n      if (isColumnVisible) {\r\n        // (Vertical offset from parent) - (three empty picker rows) + (half the height of the target to ensure the scroll triggers)\r\n        const top = target.offsetTop - 3 * target.clientHeight + target.clientHeight / 2;\r\n        if (el.scrollTop !== top) {\r\n          el.scroll({\r\n            top,\r\n            left: 0,\r\n            behavior: smooth ? 'smooth' : undefined,\r\n          });\r\n        }\r\n      }\r\n    };\r\n    /**\r\n     * When ionInputModeChange is emitted, each column\r\n     * needs to check if it is the one being made available\r\n     * for text entry.\r\n     */\r\n    this.inputModeChange = (ev) => {\r\n      if (!this.numericInput) {\r\n        return;\r\n      }\r\n      const { useInputMode, inputModeColumn } = ev.detail;\r\n      /**\r\n       * If inputModeColumn is undefined then this means\r\n       * all numericInput columns are being selected.\r\n       */\r\n      const isColumnActive = inputModeColumn === undefined || inputModeColumn === this.el;\r\n      if (!useInputMode || !isColumnActive) {\r\n        this.isActive = false;\r\n        return;\r\n      }\r\n      this.isActive = true;\r\n    };\r\n    /**\r\n     * When the column scrolls, the component\r\n     * needs to determine which item is centered\r\n     * in the view and will emit an ionChange with\r\n     * the item object.\r\n     */\r\n    this.initializeScrollListener = () => {\r\n      const { el } = this;\r\n      let timeout;\r\n      let activeEl = this.activeItem;\r\n      const scrollCallback = () => {\r\n        raf(() => {\r\n          if (timeout) {\r\n            clearTimeout(timeout);\r\n            timeout = undefined;\r\n          }\r\n          if (!this.hapticsStarted) {\r\n            hapticSelectionStart();\r\n            this.hapticsStarted = true;\r\n          }\r\n          /**\r\n           * Select item in the center of the column\r\n           * which is the month/year that we want to select\r\n           */\r\n          const bbox = el.getBoundingClientRect();\r\n          const centerX = bbox.x + bbox.width / 2;\r\n          const centerY = bbox.y + bbox.height / 2;\r\n          const activeElement = el.shadowRoot.elementFromPoint(centerX, centerY);\r\n          if (activeEl !== null) {\r\n            activeEl.classList.remove(PICKER_COL_ACTIVE);\r\n          }\r\n          /**\r\n           * If we are selecting a new value,\r\n           * we need to run haptics again.\r\n           */\r\n          if (activeElement !== activeEl) {\r\n            hapticSelectionChanged();\r\n          }\r\n          activeEl = activeElement;\r\n          activeElement.classList.add(PICKER_COL_ACTIVE);\r\n          timeout = setTimeout(() => {\r\n            const dataIndex = activeElement.getAttribute('data-index');\r\n            /**\r\n             * If no value it is\r\n             * possible we hit one of the\r\n             * empty padding columns.\r\n             */\r\n            if (dataIndex === null) {\r\n              return;\r\n            }\r\n            const index = parseInt(dataIndex, 10);\r\n            const selectedItem = this.items[index];\r\n            if (selectedItem.value !== this.value) {\r\n              this.setValue(selectedItem.value);\r\n              hapticSelectionEnd();\r\n              this.hapticsStarted = false;\r\n            }\r\n          }, 250);\r\n        });\r\n      };\r\n      /**\r\n       * Wrap this in an raf so that the scroll callback\r\n       * does not fire when component is initially shown.\r\n       */\r\n      raf(() => {\r\n        el.addEventListener('scroll', scrollCallback);\r\n        this.destroyScrollListener = () => {\r\n          el.removeEventListener('scroll', scrollCallback);\r\n        };\r\n      });\r\n    };\r\n  }\r\n  valueChange() {\r\n    if (this.isColumnVisible) {\r\n      /**\r\n       * Only scroll the active item into view when the picker column\r\n       * is actively visible to the user.\r\n       */\r\n      this.scrollActiveItemIntoView();\r\n    }\r\n  }\r\n  /**\r\n   * Only setup scroll listeners\r\n   * when the picker is visible, otherwise\r\n   * the container will have a scroll\r\n   * height of 0px.\r\n   */\r\n  componentWillLoad() {\r\n    const visibleCallback = (entries) => {\r\n      var _a;\r\n      const ev = entries[0];\r\n      if (ev.isIntersecting) {\r\n        this.isColumnVisible = true;\r\n        /**\r\n         * Because this initial call to scrollActiveItemIntoView has to fire before\r\n         * the scroll listener is set up, we need to manage the active class manually.\r\n         */\r\n        const oldActive = getElementRoot(this.el).querySelector(`.${PICKER_COL_ACTIVE}`);\r\n        oldActive === null || oldActive === void 0 ? void 0 : oldActive.classList.remove(PICKER_COL_ACTIVE);\r\n        this.scrollActiveItemIntoView();\r\n        (_a = this.activeItem) === null || _a === void 0 ? void 0 : _a.classList.add(PICKER_COL_ACTIVE);\r\n        this.initializeScrollListener();\r\n      }\r\n      else {\r\n        this.isColumnVisible = false;\r\n        if (this.destroyScrollListener) {\r\n          this.destroyScrollListener();\r\n          this.destroyScrollListener = undefined;\r\n        }\r\n      }\r\n    };\r\n    new IntersectionObserver(visibleCallback, { threshold: 0.01 }).observe(this.el);\r\n    const parentEl = this.el.closest('ion-picker-internal');\r\n    if (parentEl !== null) {\r\n      parentEl.addEventListener('ionInputModeChange', (ev) => this.inputModeChange(ev));\r\n    }\r\n  }\r\n  componentDidRender() {\r\n    var _a;\r\n    const { activeItem, items, isColumnVisible, value } = this;\r\n    if (isColumnVisible) {\r\n      if (activeItem) {\r\n        this.scrollActiveItemIntoView();\r\n      }\r\n      else if (((_a = items[0]) === null || _a === void 0 ? void 0 : _a.value) !== value) {\r\n        /**\r\n         * If the picker column does not have an active item and the current value\r\n         * does not match the first item in the picker column, that means\r\n         * the value is out of bounds. In this case, we assign the value to the\r\n         * first item to match the scroll position of the column.\r\n         *\r\n         */\r\n        this.setValue(items[0].value);\r\n      }\r\n    }\r\n  }\r\n  /** @internal  */\r\n  async scrollActiveItemIntoView() {\r\n    const activeEl = this.activeItem;\r\n    if (activeEl) {\r\n      this.centerPickerItemInView(activeEl, false);\r\n    }\r\n  }\r\n  setValue(value) {\r\n    const { items } = this;\r\n    this.value = value;\r\n    const findItem = items.find((item) => item.value === value);\r\n    if (findItem) {\r\n      this.ionChange.emit(findItem);\r\n    }\r\n  }\r\n  get activeItem() {\r\n    return getElementRoot(this.el).querySelector(`.picker-item[data-value=\"${this.value}\"]`);\r\n  }\r\n  render() {\r\n    const { items, color, isActive, numericInput } = this;\r\n    const mode = getIonMode(this);\r\n    return (h(Host, { tabindex: 0, class: createColorClasses(color, {\r\n        [mode]: true,\r\n        ['picker-column-active']: isActive,\r\n        ['picker-column-numeric-input']: numericInput,\r\n      }) }, h(\"div\", { class: \"picker-item picker-item-empty\" }, \"\\u00A0\"), h(\"div\", { class: \"picker-item picker-item-empty\" }, \"\\u00A0\"), h(\"div\", { class: \"picker-item picker-item-empty\" }, \"\\u00A0\"), items.map((item, index) => {\r\n      return (h(\"div\", { class: \"picker-item\", \"data-value\": item.value, \"data-index\": index, onClick: (ev) => {\r\n          this.centerPickerItemInView(ev.target);\r\n        } }, item.text));\r\n    }), h(\"div\", { class: \"picker-item picker-item-empty\" }, \"\\u00A0\"), h(\"div\", { class: \"picker-item picker-item-empty\" }, \"\\u00A0\"), h(\"div\", { class: \"picker-item picker-item-empty\" }, \"\\u00A0\")));\r\n  }\r\n  get el() { return getElement(this); }\r\n  static get watchers() { return {\r\n    \"value\": [\"valueChange\"]\r\n  }; }\r\n};\r\nconst PICKER_COL_ACTIVE = 'picker-item-active';\r\nPickerColumnInternal.style = {\r\n  ios: pickerColumnInternalIosCss,\r\n  md: pickerColumnInternalMdCss\r\n};\r\n\r\nexport { PickerColumnInternal as ion_picker_column_internal };\r\n"],"names":["r","registerInstance","e","createEvent","h","H","Host","i","getElement","b","getIonMode","raf","g","getElementRoot","a","hapticSelectionStart","hapticSelectionChanged","hapticSelectionEnd","c","createColorClasses","pickerColumnInternalIosCss","pickerColumnInternalMdCss","PickerColumnInternal","constructor","hostRef","ionChange","hapticsStarted","isColumnVisible","isActive","items","color","numericInput","centerPickerItemInView","target","smooth","el","top","offsetTop","clientHeight","scrollTop","scroll","left","behavior","undefined","inputModeChange","ev","useInputMode","inputModeColumn","detail","isColumnActive","initializeScrollListener","timeout","activeEl","activeItem","scrollCallback","clearTimeout","bbox","getBoundingClientRect","centerX","x","width","centerY","y","height","activeElement","shadowRoot","elementFromPoint","classList","remove","PICKER_COL_ACTIVE","add","setTimeout","dataIndex","getAttribute","index","parseInt","selectedItem","value","setValue","addEventListener","destroyScrollListener","removeEventListener","valueChange","scrollActiveItemIntoView","componentWillLoad","visibleCallback","entries","_a","isIntersecting","oldActive","querySelector","IntersectionObserver","threshold","observe","parentEl","closest","componentDidRender","findItem","find","item","emit","render","mode","tabindex","class","map","onClick","text","watchers","style","ios","md","ion_picker_column_internal"],"sourceRoot":"webpack:///"}